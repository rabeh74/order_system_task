version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - dev-static-data:/vol/web
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db

  db:
    image: postgres:15-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME:-order_db}
      - POSTGRES_USER=${DB_USER:-order_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-order_password}
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    command: redis-server --requirepass redis  
    ports:
      - "6379:6379"
    volumes:
      - dev-redis-data:/data

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: celery -A order_processing worker --loglevel=info
    volumes:
      - ./app:/app
    environment:
      - DJANGO_SETTINGS_MODULE=order_processing.settings
      - DB_HOST=db
      - DB_NAME=${DB_NAME:-order_db}
      - DB_USER=${DB_USER:-order_user}
      - DB_PASS=${DB_PASSWORD:-order_password}
    depends_on:
      - redis
      - app

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: celery -A order_processing beat --loglevel=info
    volumes:
      - ./app:/app
    environment:
      - DJANGO_SETTINGS_MODULE=order_processing.settings
      - DB_HOST=db
      - DB_NAME=${DB_NAME:-order_db}
      - DB_USER=${DB_USER:-order_user}
      - DB_PASS=${DB_PASSWORD:-order_password}
    depends_on:
      - redis

volumes:
  dev-db-data:      
  dev-static-data:  
  dev-redis-data:   